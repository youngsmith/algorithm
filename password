#include<iostream>
#define MOD 1234567

/* https://www.acmicpc.net/problem/2780 */

using namespace std;
int dir[4][2] = { {0,1},{1,0},{-1,0},{0,-1} };
int map[4][3] = { {1,2,3},{4,5,6},{7,8,9},{0,-1,-1} };
int cache[1001][5][4];
int pass_length;

int find1(int _y, int _x, int length) {
	if (length == pass_length) return 1;

	int& ret = cache[_y][_x][length];
	if (ret != -1) return ret;

	ret = 0;

	for (int i = 0; i < 4; i++) {
		int _ny = _y + dir[i][0], _nx = _x + dir[i][1];
		if (_ny < 0 || _ny >= 4 || _nx < 0 || _nx >= 3 || map[_ny][_nx] == -1) continue;
		ret += find1(_ny, _nx, length + 1) % MOD;
	}

	return ret;
}

int main() {

	memset(cache, -1, sizeof(cache));

	cin >> pass_length;

	int total = 0;
	for (int i = 0; i < 4; i++) {
		for (int j = 0; j < 3; j++) {
			if (map[i][j] == -1) continue;
			total += find1(i, j, 1)% MOD;
		}
	}
	
	cout << total % MOD << endl;

}
